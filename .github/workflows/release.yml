name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            zip_name: smscli-linux-x86_64.zip
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            zip_name: smscli-windows-x86_64.zip
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create release directory
        run: mkdir release

      - name: Copy files
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            cp target/${{ matrix.target }}/release/smscli.exe release/
          else
            cp target/${{ matrix.target }}/release/smscli release/
          fi
          cp config.yml release/

      - name: Create ZIP archive
        shell: bash
        working-directory: release
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            7z a ../${{ matrix.zip_name }} *
          else
            zip -r ../${{ matrix.zip_name }} *
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.zip_name }}
          path: ${{ matrix.zip_name }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
